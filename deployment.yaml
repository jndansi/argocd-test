apiVersion: apps/v1
kind: Deployment
metadata:
  name:  protein-app
  namespace: production
  labels:
    app:  protein-app
spec:
  selector:
    matchLabels:
      app: protein-app
  replicas: 3
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app:  protein-app
    spec:
      containers:
      - name:  protein-app
        image:  docker.io/jndansi/protein:latest
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 100m
            memory: 100Mi
        # livenessProbe:
        #   tcpSocket:
        #     port: 80
        #   initialDelaySeconds: 5
        #   timeoutSeconds: 5
        #   successThreshold: 1
        #   failureThreshold: 3
        #   periodSeconds: 10
        # readinessProbe:
        #   httpGet:
        #     path: /_status/healthz
        #     port: 80
        #   initialDelaySeconds: 5
        #   timeoutSeconds: 2
        #   successThreshold: 1
        #   failureThreshold: 3
        #   periodSeconds: 10
        # env:
        # - name: DB_HOST
        #   valueFrom:
        #     configMapKeyRef:
        #       name: protein-app
        #       key: DB_HOST
        ports:
        - containerPort:  80
          name:  protein-app
      #   volumeMounts:
      #   - name: localtime
      #     mountPath: /etc/localtime
      # volumes:
      #   - name: localtime
      #     hostPath:
      #       path: /usr/share/zoneinfo/Asia/Shanghai
      restartPolicy: Always

---

apiVersion: v1
kind: Service
metadata:
  name: protein-app
  namespace: production
spec:
  selector:
    app: protein-app
  type: NodePort
  sessionAffinity: None
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800
  ports:
  - name: protein-app
    protocol: TCP
    port: 80
    targetPort: 80
    nodePort: 30077